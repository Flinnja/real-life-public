'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _createDateObjects = require('./createDateObjects');

var _createDateObjects2 = _interopRequireDefault(_createDateObjects);

var Calendar = (function (_Component) {
  _inherits(Calendar, _Component);

  function Calendar() {
    _classCallCheck(this, Calendar);

    _get(Object.getPrototypeOf(Calendar.prototype), 'constructor', this).apply(this, arguments);
  }

  _createClass(Calendar, [{
    key: 'render',
    value: function render() {
      var _props = this.props;
      var date = _props.date;
      var weekOffset = _props.weekOffset;
      var renderDay = _props.renderDay;
      var onNextMonth = _props.onNextMonth;
      var onPrevMonth = _props.onPrevMonth;
      var onPickDate = _props.onPickDate;

      return _react2['default'].createElement(
        'div',
        { className: 'Calendar' },
        _react2['default'].createElement(
          'div',
          { className: 'Calendar-header' },
          _react2['default'].createElement(
            'button',
            { onClick: onPrevMonth },
            '«'
          ),
          _react2['default'].createElement(
            'div',
            { className: 'Calendar-header-currentDate' },
            date.format('MMMM YYYY')
          ),
          _react2['default'].createElement(
            'button',
            { onClick: onNextMonth },
            '»'
          )
        ),
        _react2['default'].createElement(
          'div',
          { className: 'Calendar-grid' },
          (0, _createDateObjects2['default'])(date, weekOffset).map(function (day, i) {
            return _react2['default'].createElement(
              'div',
              {
                key: 'day-' + i,
                className: 'Calendar-grid-item ' + (day.classNames || ''),
                onClick: function (e) {
                  return onPickDate(day.day);
                }
              },
              renderDay(day.day)
            );
          })
        )
      );
    }
  }], [{
    key: 'propTypes',
    value: {
      weekOffset: _react.PropTypes.number.isRequired,
      date: _react.PropTypes.object.isRequired,
      renderDay: _react.PropTypes.func,
      onNextMonth: _react.PropTypes.func.isRequired,
      onPrevMonth: _react.PropTypes.func.isRequired,
      onPickDate: _react.PropTypes.func
    },
    enumerable: true
  }, {
    key: 'defaultProps',
    value: {
      weekOffset: 0,
      renderDay: function renderDay(day) {
        return day.format('YYYY-MM-D');
      }
    },
    enumerable: true
  }]);

  return Calendar;
})(_react.Component);

exports['default'] = Calendar;
module.exports = exports['default'];